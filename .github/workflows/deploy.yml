name: Host on Vercel

on:
    pull_request:
        branches: main
        types: [opened, reopened, synchronize]
    push:
        branches:
            - main

jobs:
    host:
        runs-on: ubuntu-latest
        steps:
            - name: Wait for Main CI/CD
              if: github.base_ref == 'main'
              uses: fountainhead/action-wait-for-check@v1.2.0
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  checkName: integrity-check
                  intervalSeconds: 30
                  timeoutSeconds: 600
                  ref: ${{ github.event.pull_request.head.sha }}

            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.ACTION_PAT }}

            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: Setup NodeJS
              uses: actions/setup-node@v4
              with:
                  node-version-file: '/project/.node-version'
                  cache: 'pnpm'
                  cache-dependency-path: 'project/pnpm-lock.yaml'

            - name: Install Dependencies
              working-directory: ./project
              run: pnpm install --frozen-lockfile

            - name: Install Vercel CLI
              run: pnpm add -g vercel
            - name: Pull Vercel Environment (PR)
              if: github.event_name == 'pull_request'
              working-directory: ./project
              run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}

            - name: Pull Vercel Environment (Production)
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              working-directory: ./project
              run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}

            - name: Build Project (Preview)
              if: github.event_name == 'pull_request'
              working-directory: ./project
              run: vercel build --token ${{ secrets.VERCEL_TOKEN }}

            - name: Build Project (Production)
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              working-directory: ./project
              run: vercel build --token ${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project (Preview)
              if: github.event_name == 'pull_request'
              working-directory: ./project
              id: deploy-preview
              run: |
                  DEPLOY_OUTPUT=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }})
                  echo "DEPLOY_URL=$DEPLOY_OUTPUT" >> $GITHUB_OUTPUT

            - name: Deploy Project (Production)
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              working-directory: ./project
              id: deploy-prod
              run: |
                  DEPLOY_OUTPUT=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} --prod)
                  echo "DEPLOY_URL=$DEPLOY_OUTPUT" >> $GITHUB_OUTPUT

            - name: Comment Preview URL
              if: github.event_name == 'pull_request'
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DEPLOY_URL: ${{ steps.deploy-preview.outputs.DEPLOY_URL }}
              run: |
                  gh pr comment ${{ github.event.pull_request.number }} --body "ðŸš€ Preview deployment is ready! You can view it at: $DEPLOY_URL"
